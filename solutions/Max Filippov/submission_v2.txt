Fri, Feb 11, 2011 at 22:07
--------------------------

Ответ на второй тур -- h1cKmE1fUsAn
Результат -- R0und2 D0ne!
Алгоритм проверки пароля такой:

bool check(const char *p)
{
   static const int xor_array[] = {
       0x3469,
       0x9c11,
       0xd41e,
       0x7ddf,
       0x78b4,
       0x6aed,
       0x4024,
       0xc03a,
       0x4164,
       0xc3c3,
       0x4b6c,
       0xe1ca,
   };

   int v = 0;
   int x = 0x3401;

   for (int i = 0; i < 12; ++i)
   {
       int f = p[i] ^ x ^ xor_array[i];
       // printf("x: %04x, f: %04x\n", x, f);
       v |= f;
       x = (x * 3 + 0x1d) & 0xffff;
   }
   return !v;
}

Закомментированный printf выводит ключевую фразу по ходу.
Методика анализа -- как и в первом туре -- дизассемблирование трассы выполнения.
Первый тур был откровенно интереснее.
